{"version":3,"sources":["assets/js/magnet.js"],"names":["burger","document","querySelector","Nearby","onProgress","distance","mousepos","viewportOffset","getBoundingClientRect","top","positionX","left","x","positionY","y","offsetHeight","offsetWidth","window","innerWidth","to","scale","logo"],"mappings":";AA8BA,aA9BA,IAAA,EAAA,QAAA,QAEMA,EAASC,SAASC,cAAc,mCAEtC,IAAIC,OAAOH,EAAQ,CACfI,WAAY,SAACC,EAAUC,GACbC,IAAAA,EAAiBP,EAAOQ,wBAExBC,EAAMF,EAAeE,IAEvBC,EADSH,EAAeI,KACLL,EAASM,EAC5BC,EAAYJ,EAAMH,EAASQ,EAC3BC,EAAqC,GAAtBf,EAAOe,aACtBC,EAAmC,GAArBhB,EAAOgB,YAGrBX,EAAW,KACPC,EAASM,EAAIK,OAAOC,WAAalB,EAAOgB,YAH3B,GAMPG,EAAAA,UAAAA,GAAGnB,EAAQ,GAAK,CAAEoB,MAAO,EAAGR,GAAIF,EAAYM,EAAaF,GAAID,EAAYE,IAGzEI,EAAAA,UAAAA,GAAGnB,EAAQ,GAAK,CAAEoB,MAAO,EAAGR,EAAG,EAAGE,EAAG,OAK3D,IAAMO,EAAOpB,SAASC,cAAc,iCAEpC,IAAIC,OAAOkB,EAAM,CACbjB,WAAY,SAACC,EAAUC,GACbC,IAAAA,EAAiBc,EAAKb,wBAEtBC,EAAMF,EAAeE,IAEvBC,EADSH,EAAeI,KACLL,EAASM,EAC5BC,EAAYJ,EAAMH,EAASQ,EAC3BC,EAAmC,GAApBM,EAAKN,aACpBC,EAAiC,GAAnBK,EAAKL,YAGnBX,EAAW,KACPC,EAASM,EAAIK,OAAOC,WAAaG,EAAKL,YAHzB,GAKPG,EAAAA,UAAAA,GAAGE,EAAM,GAAK,CAAED,MAAO,EAAGR,GAAIF,EAAYM,EAAaF,GAAID,EAAYE,IAGvEI,EAAAA,UAAAA,GAAGE,EAAM,GAAK,CAAED,MAAO,EAAGR,EAAG,EAAGE,EAAG","file":"magnet.22837c77.js","sourceRoot":"..","sourcesContent":["import { TweenLite } from 'gsap';\n\nconst burger = document.querySelector('.c-navigation-list__item-burger');\n\nnew Nearby(burger, {\n    onProgress: (distance, mousepos) => {\n        const viewportOffset = burger.getBoundingClientRect();\n        // these are relative to the viewport, i.e. the window\n        const top = viewportOffset.top;\n        const left = viewportOffset.left;\n        let positionX = left - mousepos.x;\n        let positionY = top - mousepos.y;\n        let offsetHeight = burger.offsetHeight * 0.5;\n        let offsetWidth = burger.offsetWidth * 0.5;\n        const offsetWindow = 25;\n        if (\n            distance < 100\n            && (mousepos.x < window.innerWidth - burger.offsetWidth - offsetWindow)\n        ) {\n\n            TweenLite.to(burger, 0.5, { scale: 2, x: -positionX - offsetWidth, y: -positionY - offsetHeight });\n\n        } else {\n            TweenLite.to(burger, 0.5, { scale: 1, x: 0, y: 0 });\n        }\n    }\n});\n\nconst logo = document.querySelector('.c-navigation-list__item-logo');\n\nnew Nearby(logo, {\n    onProgress: (distance, mousepos) => {\n        const viewportOffset = logo.getBoundingClientRect();\n        // these are relative to the viewport, i.e. the window\n        const top = viewportOffset.top;\n        const left = viewportOffset.left;\n        let positionX = left - mousepos.x;\n        let positionY = top - mousepos.y;\n        let offsetHeight = logo.offsetHeight * 0.5;\n        let offsetWidth = logo.offsetWidth * 0.5;\n        const offsetWindow = 25;\n        if (\n            distance < 100\n            && (mousepos.x < window.innerWidth - logo.offsetWidth - offsetWindow)) {\n\n            TweenLite.to(logo, 0.5, { scale: 2, x: -positionX - offsetWidth, y: -positionY - offsetHeight });\n\n        } else {\n            TweenLite.to(logo, 0.5, { scale: 1, x: 0, y: 0 });\n        }\n    }\n});"]}